# .github/workflows/deploy.yml
# 🚀 Pipeline de CI/CD para despliegue local con un Self-Hosted Runner

name: Deploy Locally with Self-Hosted Runner

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: # Permite ejecutar el pipeline manualmente

# Variables de entorno para que docker-compose las use
env:
  DOCKER_PROJECT_NAME: 'ecomapp'
  APP_CONTAINER_NAME: 'product_app'
  DB_CONTAINER_NAME: 'mysql-ecommerce-prod'
  DB_NAME: 'ecommerce_lp2_prod'
  DB_USER: 'root'
  DB_PASSWORD: 'admin123'

jobs:
  build-and-deploy:
    name: Build and Deploy Locally
    
    # 🎯 ¡Paso Clave! Usa el runner que acabas de configurar.
    runs-on: self-hosted

    steps:
      # 1. Descargar el código del repositorio en el runner
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configurar el entorno de Java y Maven en el runner
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # 3. Construir el proyecto y crear el .jar
      - name: Build with Maven
        run: mvn -B clean package -DskipTests

        # 4. Desplegar la aplicación usando Docker Compose
      - name: Deploy with Docker Compose
        run: |
          echo "✅ Iniciando despliegue en el runner local..."
          
          cd docker
          
          echo "🧹 Limpiando despliegue anterior..."
          docker-compose -p ${{ env.DOCKER_PROJECT_NAME }} down -v --remove-orphans || echo "⚠️ No se encontró un despliegue anterior."

          echo "🏗️ Construyendo y levantando los servicios..."
          # Docker se encargará de ejecutar init.sql automáticamente gracias al volumen.
          docker-compose -p ${{ env.DOCKER_PROJECT_NAME }} up -d --build

          echo "⏳ Esperando unos segundos para que la app inicie..."
          sleep 15
          
          echo "🔍 Verificando estado de los contenedores..."
          docker-compose -p ${{ env.DOCKER_PROJECT_NAME }} ps
          
          echo "🗒️ Mostrando los últimos logs de la aplicación:"
          docker logs --tail 100 ${{ env.APP_CONTAINER_NAME }}
          
          echo "🎉 ✓ Despliegue local completado exitosamente."
